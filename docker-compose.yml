#indica la version de Docker Compose utilizada
version: '3.7'
#Bloque de servicios, indica los contenedores a utilizar.
services:
  app-web:       #nombre del servicio
    image: saulfeliciano/encuestaweb #imagen utilizada.
    ports:          #puertos que estaran expuestos.
      - 8080:8080
    environment:    #variable de ambiente
      - spring.datasource.url=jdbc:mysql://base-datos-app-web:3306/encuestaweb
    networks:    #red para conectar los equipos.
      - red-app
    depends_on:   #indica que primero debe subir los servicios indicados.
      - base-datos-app-web
  app-web2:       #nombre del servicio
    image: saulfeliciano/encuestaweb #imagen utilizada.
    ports:          #puertos que estaran expuestos.
      - 8081:8081
    environment:    #variable de ambiente
      - spring.datasource.url=jdbc:mysql://base-datos-app-web:3306/encuestaweb
    networks:    #red para conectar los equipos.
      - red-app
    depends_on:   #indica que primero debe subir los servicios indicados.
      - base-datos-app-web
  app-web3:       #nombre del servicio
    image: saulfeliciano/encuestaweb #imagen utilizada.
    ports:          #puertos que estaran expuestos.
      - 8082:8082
    environment:    #variable de ambiente
      - spring.datasource.url=jdbc:mysql://base-datos-app-web:3306/encuestaweb
    networks:    #red para conectar los equipos.
      - red-app
    depends_on:   #indica que primero debe subir los servicios indicados.
      - base-datos-app-web

  base-datos-app-web:
    image: mysql:5.7.26
    ports:
      - 33006:3306
    environment:
      - MYSQL_ROOT_PASSWORD=12345678
      - MYSQL_USER=root
      - MYSQL_DATABASE=encuestaweb
    volumes:   #volumen de datos utilizado.
      - ~/datadir_mysql:/var/lib/mysql
    networks:
      - red-app
networks:  #bloque para las redes
  red-app:   #indicando la red definida
  